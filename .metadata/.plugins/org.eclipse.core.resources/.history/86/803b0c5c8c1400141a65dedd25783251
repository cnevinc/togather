/*
 * Copyright (C) 2011 Markus Junginger, greenrobot (http://greenrobot.de)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.cgearc.greendao;

import de.greenrobot.daogenerator.DaoGenerator;
import de.greenrobot.daogenerator.Entity;
import de.greenrobot.daogenerator.Property;
import de.greenrobot.daogenerator.Schema;
import de.greenrobot.daogenerator.ToMany;

/**
 * Generates entities and DAOs for the example project DaoExample.
 * 
 * Run it as a Java application (not Android).
 * 
 * @author Markus
 */
public class YummyDaoGenerator {

    public static void main(String[] args) throws Exception {
        Schema schema = new Schema(7, "com.georgeme");
        schema.enableKeepSectionsByDefault();
        schema.enableActiveEntitiesByDefault();
        addArticleTable(schema);

        new DaoGenerator().generateAll(schema, "F:/DOZO/Android/workspace_ideas/GeorgeMe/src-gen");
    }

    private static void addArticleTable(Schema schema) {
        Entity Restaurant = schema.addEntity("Restaurant");
//        user.implementsInterface("Comparable");
        Restaurant.addIdProperty();
        Restaurant.addStringProperty("description");
        Restaurant.addStringProperty("address");
        Restaurant.addStringProperty("source");
        Restaurant.addStringProperty("time");
        Restaurant.addStringProperty("name");
        Restaurant.addStringProperty("latitude");
        Restaurant.addStringProperty("longitude");
        Restaurant.addStringProperty("comments");
        Restaurant.addStringProperty("photos");
        Restaurant.addStringProperty("price");
        Restaurant.addStringProperty("rating");
        Restaurant.addStringProperty("distance");
        Restaurant.addStringProperty("cover");
        
        Entity pic = schema.addEntity("Picture");
        pic.addIdProperty();
        pic.addStringProperty("uri").notNull();
        pic.addStringProperty("height").notNull();
        pic.addStringProperty("width").notNull();
        Property article_id = pic.addLongProperty("article_id").notNull().getProperty();
        
        pic.addToOne(Restaurant, article_id);
        Restaurant.addToMany(pic, article_id);
       
        Entity fav = schema.addEntity("Favorite");
        fav.addStringProperty("blogger_id");
        Property farticle_id = fav.addLongProperty("article_id").primaryKey().getProperty();
        fav.addToOne(Restaurant, farticle_id);
        Restaurant.addToMany(fav, farticle_id);        
//      
    }
   

}
